
# INPUT
#

input {

 tcp {
  type => "cfe3"
  port => 53080
  ssl_cacert => "/etc/pki/tls/certs/rootCA.pem"
  ssl_cert => "/etc/pki/tls/certs/logstash.crt"
  ssl_key => "/etc/pki/tls/private/logstash.key"
  ssl_enable => true
  ssl_verify => false
  codec => 'plain'
 }

}
#
# FILTER
#

filter {

# if [type] == "cfe3" {
  grok {
   match => [ "message", "%{NUMBER:timestamp},%{WORD:cf3_type},(?<op>[+-]{1}),%{GREEDYDATA:content}" ]
	 add_tag => [ "cf_elk_state_reporting", "MATCHED" ]
  }
	if "MATCHED" not in [tags] {
	  grok {
	   match => [ "message", "%{NUMBER:timestamp},(?<ph>[A-Za-z_]*),(?<file>[^,]+),(?<op>[CDN]{1}),%{GREEDYDATA:text}" ]
	   add_field => { "cf3_type" => "cf_elk_report_file_changes" }
	   add_tag => [ "cf_elk_report_file_changes", "MATCHED" ] 
	   remove_tag => ["_grokparsefailure"]
	 }
	}
	if "cf_elk_state_reporting" in [tags] {
   if [cf3_type] == "cf_elk_report_allclasses" {
	  csv {
	 	 source => "content"
		 columns => [ "class" ]
	  }
	 }
   if [cf3_type] == "cf_elk_report_software_packages" {
	  csv {
	 	 source => "content"
		 columns => [ "name","version","arch","fmt" ]
	  }
	 }
   if [cf3_type] == "cf_elk_report_open_ports" {
	  csv {
	 	 source => "content"
		 columns => [ "proto","port","addr" ]
	  }
	 }
   if [cf3_type] == "cf_elk_report_cfprocs" {
	  json {
	 	 source => "content"
	  }
	 }
	}
#	 mutate {
#	  remove_field => [ "content" ]
#	 }
#  } else if [cf3_type] == "cf_elk_report_software_packages" {
#	 grok {
#	 	match => [ "content", "%{NOTSPACE:name},%{NOTSPACE:vers},%{NOTSPACE:arch},%{NOTSPACE:pkgtype}" ]
#	 }
#	}
#  mutate {
#   remove_field => [ "content" ]
#	}
#  if "_grokparsefailure" in [tags] {
#   drop { }
#  }
# }
}

#
# OUTPUT
#

output {

# stdout { codec => rubydebug }
 stdout { }
 elasticsearch { 
  	host => localhost
		index => "%{cf3_type}" 
 }
}
